<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:v="clr-namespace:ScanProject.Views"
    xmlns:vm="clr-namespace:ScanProject.ViewModels"
    xmlns:converter="clr-namespace:ScanProject.Shared.Converter"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008">
    <Style 
        TargetType="Grid">
        <Setter Property="ShowGridLines" Value="False" />
    </Style>

    <Style 
        TargetType="GridSplitter">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Width" Value="5" />
        <Setter Property="Margin" Value="3,0,3,0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="Gray" />
    </Style>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,0,10,0" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid >
                        <Grid.ColumnDefinitions >
                            <ColumnDefinition Width="90*" />
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Border BorderBrush="Red" BorderThickness="2" CornerRadius="2.75" Grid.Column="0">
                            <AdornedElementPlaceholder Grid.Column="0"/>
                        </Border>
                        <TextBlock Foreground="Red"  Grid.Column="1" Margin="0" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="txtError">*</TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
        Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,0,10,0" />
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid >
                        <Grid.ColumnDefinitions >
                            <ColumnDefinition Width="90*" />
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Border BorderBrush="Red" BorderThickness="2" CornerRadius="2.75" Grid.Column="0">
                            <AdornedElementPlaceholder Grid.Column="0"/>
                        </Border>
                        <TextBlock Foreground="Red"  Grid.Column="1" Margin="0" FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Left" x:Name="txtError">*</TextBlock>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip"
        Value="{Binding RelativeSource={RelativeSource Self},
                        Path=(Validation.Errors)[0].ErrorContent}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style 
        x:Key="view"
        TargetType="UserControl">
        <Setter Property="Width" Value="auto" />
        <Setter Property="Height" Value="auto" />
    </Style>
    <Style 
        x:Key="statusbar"
        TargetType="StatusBar">
        
        
    </Style>
        
    <Style  
        x:Key="window"
        TargetType="Window">
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="Width" Value="1024" />
        <Setter Property="Height" Value="768" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Background" Value="Gray" />
        <!--<Setter Property="WindowState" Value="Maximized" />-->
    </Style>
    <Style 
        x:Key="border_monitor" 
        TargetType="Border">
        <Setter Property="BorderThickness"  Value="1" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="CornerRadius" Value="5" />
    </Style>
    <Style 
        x:Key="caption" 
        TargetType="Label">
        <Setter Property="FontSize" Value="16" />
     </Style>
    <Style 
        TargetType="Button">
        <Style.Triggers>
            <Trigger Property="IsMouseOver"  Value="true">
                <Setter Property="Background" Value="Orange" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Margin" Value="5,0,0,0" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Width" Value="auto" />
        <Setter Property="MinWidth" Value="75" />
        <Setter Property="MinHeight" Value="25" />
        <Setter Property="HorizontalContentAlignment"  Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="5,0,0,0" />
    </Style>
    
    <Style 
        x:Key="miniButton" TargetType="Button">
        <Setter Property="Margin" Value="0,1,0,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="DockPanel.Dock" Value="Right" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Setter Property="HorizontalContentAlignment"  Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    
    <Style 
        TargetType="ComboBox">
        <Setter Property="Height" Value="22" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>
    
    <Style x:Key="labelIsUsed" TargetType="Label">
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ToolTip"  Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Content" Value="Đã sử dụng" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ToolTip" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Content" Value="Chưa sử dụng" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <converter:BooleanToStringConverter FalseValue="Không có hiệu lực" TrueValue="Có hiệu lực" x:Key="converterIsUsedToString" />
    <converter:BooleanToVisibilityConverter FalseValue="Collapsed"  TrueValue="Visible" x:Key="booleanToVisibilityConverter" />
    <converter:InverseBooleanConverter x:Key="inverseBooleanConverter" />
    <converter:NullToVisibilityConverter x:Key="nullToVisibilityConverter" NotNull="Visible" Null="Collapsed" />
    <converter:EnumToBooleanConverter x:Key="enumToBooleanConverter" />
    
</ResourceDictionary>